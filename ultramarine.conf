# RELEASE
release_name = "Ultramarine Linux"
release_short = "Ultramarine"
release_version = "35"



# GENERAL SETTINGS
comps_file = {
        'scm': 'git',
        'repo': 'https://gitlab.ultramarine-linux.org/release-engineering/ultramarine-comps.git',
        'file': 'comps-um35.xml',
}

release_internal = False
variants_file = "variants.xml"

pkgset_source = "koji"
pkgset_koji_tag = "um35"
#pkgset_repos = {
#    'x86_64': [
#        'http://dl.fedoraproject.org/pub/fedora/linux/releases/35/Everything/x86_64/os/'
#        'https://dl.fedoraproject.org/pub/fedora/linux/updates/35/Everything/x86_64/'
#    ],
#}


volume_id_substitutions ={
    'Flagship': 'Fl',
    'Cutefish': 'Cf',
}

disc_types = {
    'boot': 'netinst',
    'live': 'Live',
}



gather_method = "deps"
gather_backend = 'dnf'
gather_profiler = True
check_deps = False
greedy_method = 'build'
#repoclosure_strictness= 'off'

# CREATEREPO
createrepo_deltas = False
createrepo_database = True
createrepo_checksum = "sha256"
createrepo_use_xz = True
createrepo_num_threads = 8
createrepo_num_workers = 8
createrepo_extra_args = ['--distro=cpe:/o:ultramarine:ultramarine:35,Ultramarine Linux 35']

disc_types = {
    'boot': 'netinst',
    'live': 'Live',
}



### Media Compose ###
global_ksurl = 'git+https://gitlab.ultramarine-linux.org/release-engineering/build-scripts.git'
global_release = '!RELEASE_FROM_LABEL_DATE_TYPE_RESPIN'
global_version = '35'
# live_images ignores this in favor of live_target
global_target = 'um35'

volume_id_substitutions = {
    'Flagship': 'Fl',
    'Cutefish': 'Cf',
}

live_media = {
    '^Flagship$':[
        {
            'name': 'Ultramarine-Flagship-Live',
            'kickstart': 'kickstarts/ultramarine-budgie.ks',
            'arches': ['x86_64'],
            'repo': 'Everything'

        }
    ]
    '^Cutefish$':[
        {
            'name': 'Ultramarine-Cutefish-Live',
            'kickstart': 'kickstarts/ultramarine-cutefish.ks',
            'arches': ['x86_64'],
            'repo': 'Everything'

        }
    ]
}

createiso_skip = [
        ('^Everything$', {
            '*': True,
            'src': True
        })

]

translate_paths = [
   ('/mnt/koji/compose/', 'https://lapis.ultramarine-linux.org/kojifiles/compose'),
]

# checksum stuff
media_checksums = ['sha256']
media_checksum_one_file = True
create_jigdo = False


# BUILDINSTALL
buildinstall_method = "lorax"

koji_profile = "koji"